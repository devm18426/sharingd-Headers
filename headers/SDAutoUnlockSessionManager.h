/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:05 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <sharingd/sharingd-Structs.h>
#import <libobjc.A.dylib/SDAutoUnlockTransportClient.h>
#import <libobjc.A.dylib/SDAutoUnlockSessionDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSString, NSData, NSDictionary, NSObject, NSHashTable, SDAutoUnlockSuggestionManager, NSMutableDictionary, NSMutableArray, NSMutableSet, NSDate, SFDeviceDiscovery, SFAutoUnlockDevice, NSError, NSSet, SDAutoUnlockConnectionCacher, SDAutoUnlockLogRequest, SDAutoUnlockIconTransferStore;

@interface SDAutoUnlockSessionManager : NSObject <SDAutoUnlockTransportClient, SDAutoUnlockSessionDelegate> {

	char _attemptInProgress;
	char _watchUnlockEnabled;
	char _previousNearbyState;
	char _extendedTimer;
	char _notifiedForProxy;
	char _proxyNotAvailableForUnlock;
	char _macBeenUnlocked;
	char _presentedBluetoothError;
	char _presentedWiFiError;
	char _currentlyAdvertising;
	char _previousConnectedState;
	char _cachedMacWiFiState;
	char _cachedWatchWiFiState;
	char _wifiStateNeedsUpdating;
	char _preventRadarNotification;
	int _proxyRSSI;
	NSString* _state;
	NSData* _attemptExternalACMContext;
	unsigned long long _stateHandle;
	NSDictionary* _awdlInfo;
	NSObject*<OS_dispatch_queue> _sessionManagerQueue;
	NSHashTable* _observerTable;
	SDAutoUnlockSuggestionManager* _suggestionManager;
	NSMutableDictionary* _lockAuthSessions;
	NSMutableArray* _canceledPairingKeySessions;
	NSMutableArray* _canceledAuthLockSessions;
	NSMutableDictionary* _keyAuthSessions;
	NSMutableDictionary* _lockPairingSessions;
	NSMutableDictionary* _keyPairingSessions;
	NSMutableDictionary* _proxySessions;
	NSMutableArray* _locksWithAKSTokens;
	NSMutableArray* _keysWithAKSTokens;
	NSMutableSet* _serviceClients;
	NSData* _previousMacAddressData;
	NSObject*<OS_dispatch_source> _nearbyPushTimer;
	NSDate* _attemptStart;
	SFDeviceDiscovery* _scanner;
	SFAutoUnlockDevice* _attemptDevice;
	long long _attemptType;
	NSString* _attemptBundlePath;
	NSString* _attemptAppName;
	/*^block*/id _attemptActivatedHandler;
	NSObject*<OS_dispatch_source> _scanTimer;
	double _proxyDiscoverTime;
	NSString* _scanErrorString;
	NSError* _authSessionError;
	long long _proxyErrorCode;
	NSString* _proxyDeviceModel;
	long long _lastProxyState;
	double _proxyConnectionTime;
	NSSet* _scanAutoUnlockDevices;
	NSSet* _scanWatchIDs;
	NSSet* _scanPhoneIDs;
	long long _attemptCount;
	NSString* _attemptID;
	NSString* _incrementedCountID;
	long long _connectedBluetoothDevices;
	long long _timeSinceLastMachineWake;
	long long _lastSleepType;
	NSSet* _eligibleDevices;
	long long _wifiErrorCount;
	long long _bluetoothErrorCount;
	long long _idsMacCountCache;
	NSDate* _advertisingChangedDate;
	NSDate* _wristStateChangedDate;
	NSDate* _lockStateChangedDate;
	NSDate* _nearbyDeviceChangedDate;
	NSDate* _pipeConnectionChangedDate;
	SDAutoUnlockConnectionCacher* _connectionCacher;
	SDAutoUnlockLogRequest* _logRequester;
	NSMutableArray* _previousSessionIDs;
	SDAutoUnlockIconTransferStore* _iconTransferStore;

}

@property (assign,nonatomic) unsigned long long stateHandle;                                 //@synthesize stateHandle=_stateHandle - In the implementation block
@property (nonatomic,copy) NSDictionary * awdlInfo;                                          //@synthesize awdlInfo=_awdlInfo - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> sessionManagerQueue;               //@synthesize sessionManagerQueue=_sessionManagerQueue - In the implementation block
@property (nonatomic,retain) NSHashTable * observerTable;                                    //@synthesize observerTable=_observerTable - In the implementation block
@property (nonatomic,retain) SDAutoUnlockSuggestionManager * suggestionManager;              //@synthesize suggestionManager=_suggestionManager - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * lockAuthSessions;                         //@synthesize lockAuthSessions=_lockAuthSessions - In the implementation block
@property (nonatomic,retain) NSMutableArray * canceledPairingKeySessions;                    //@synthesize canceledPairingKeySessions=_canceledPairingKeySessions - In the implementation block
@property (nonatomic,retain) NSMutableArray * canceledAuthLockSessions;                      //@synthesize canceledAuthLockSessions=_canceledAuthLockSessions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * keyAuthSessions;                          //@synthesize keyAuthSessions=_keyAuthSessions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * lockPairingSessions;                      //@synthesize lockPairingSessions=_lockPairingSessions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * keyPairingSessions;                       //@synthesize keyPairingSessions=_keyPairingSessions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * proxySessions;                            //@synthesize proxySessions=_proxySessions - In the implementation block
@property (nonatomic,retain) NSMutableArray * locksWithAKSTokens;                            //@synthesize locksWithAKSTokens=_locksWithAKSTokens - In the implementation block
@property (nonatomic,retain) NSMutableArray * keysWithAKSTokens;                             //@synthesize keysWithAKSTokens=_keysWithAKSTokens - In the implementation block
@property (nonatomic,retain) NSMutableSet * serviceClients;                                  //@synthesize serviceClients=_serviceClients - In the implementation block
@property (assign,nonatomic) char watchUnlockEnabled;                                        //@synthesize watchUnlockEnabled=_watchUnlockEnabled - In the implementation block
@property (nonatomic,retain) NSData * previousMacAddressData;                                //@synthesize previousMacAddressData=_previousMacAddressData - In the implementation block
@property (assign,nonatomic) char previousNearbyState;                                       //@synthesize previousNearbyState=_previousNearbyState - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> nearbyPushTimer;                  //@synthesize nearbyPushTimer=_nearbyPushTimer - In the implementation block
@property (nonatomic,retain) NSDate * attemptStart;                                          //@synthesize attemptStart=_attemptStart - In the implementation block
@property (assign,nonatomic) char extendedTimer;                                             //@synthesize extendedTimer=_extendedTimer - In the implementation block
@property (nonatomic,retain) SFDeviceDiscovery * scanner;                                    //@synthesize scanner=_scanner - In the implementation block
@property (nonatomic,retain) SFAutoUnlockDevice * attemptDevice;                             //@synthesize attemptDevice=_attemptDevice - In the implementation block
@property (assign,nonatomic) long long attemptType;                                          //@synthesize attemptType=_attemptType - In the implementation block
@property (nonatomic,retain) NSString * attemptBundlePath;                                   //@synthesize attemptBundlePath=_attemptBundlePath - In the implementation block
@property (nonatomic,retain) NSString * attemptAppName;                                      //@synthesize attemptAppName=_attemptAppName - In the implementation block
@property (nonatomic,copy) id attemptActivatedHandler;                                       //@synthesize attemptActivatedHandler=_attemptActivatedHandler - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> scanTimer;                        //@synthesize scanTimer=_scanTimer - In the implementation block
@property (assign,nonatomic) double proxyDiscoverTime;                                       //@synthesize proxyDiscoverTime=_proxyDiscoverTime - In the implementation block
@property (assign,nonatomic) char notifiedForProxy;                                          //@synthesize notifiedForProxy=_notifiedForProxy - In the implementation block
@property (nonatomic,retain) NSString * scanErrorString;                                     //@synthesize scanErrorString=_scanErrorString - In the implementation block
@property (nonatomic,retain) NSError * authSessionError;                                     //@synthesize authSessionError=_authSessionError - In the implementation block
@property (assign,nonatomic) long long proxyErrorCode;                                       //@synthesize proxyErrorCode=_proxyErrorCode - In the implementation block
@property (nonatomic,retain) NSString * proxyDeviceModel;                                    //@synthesize proxyDeviceModel=_proxyDeviceModel - In the implementation block
@property (assign,nonatomic) int proxyRSSI;                                                  //@synthesize proxyRSSI=_proxyRSSI - In the implementation block
@property (assign,nonatomic) long long lastProxyState;                                       //@synthesize lastProxyState=_lastProxyState - In the implementation block
@property (assign,nonatomic) double proxyConnectionTime;                                     //@synthesize proxyConnectionTime=_proxyConnectionTime - In the implementation block
@property (assign,nonatomic) char proxyNotAvailableForUnlock;                                //@synthesize proxyNotAvailableForUnlock=_proxyNotAvailableForUnlock - In the implementation block
@property (nonatomic,retain) NSSet * scanAutoUnlockDevices;                                  //@synthesize scanAutoUnlockDevices=_scanAutoUnlockDevices - In the implementation block
@property (nonatomic,retain) NSSet * scanWatchIDs;                                           //@synthesize scanWatchIDs=_scanWatchIDs - In the implementation block
@property (nonatomic,retain) NSSet * scanPhoneIDs;                                           //@synthesize scanPhoneIDs=_scanPhoneIDs - In the implementation block
@property (assign,nonatomic) char macBeenUnlocked;                                           //@synthesize macBeenUnlocked=_macBeenUnlocked - In the implementation block
@property (assign,nonatomic) long long attemptCount;                                         //@synthesize attemptCount=_attemptCount - In the implementation block
@property (nonatomic,retain) NSString * attemptID;                                           //@synthesize attemptID=_attemptID - In the implementation block
@property (nonatomic,retain) NSString * incrementedCountID;                                  //@synthesize incrementedCountID=_incrementedCountID - In the implementation block
@property (assign,nonatomic) long long connectedBluetoothDevices;                            //@synthesize connectedBluetoothDevices=_connectedBluetoothDevices - In the implementation block
@property (assign,nonatomic) long long timeSinceLastMachineWake;                             //@synthesize timeSinceLastMachineWake=_timeSinceLastMachineWake - In the implementation block
@property (assign,nonatomic) long long lastSleepType;                                        //@synthesize lastSleepType=_lastSleepType - In the implementation block
@property (nonatomic,retain) NSSet * eligibleDevices;                                        //@synthesize eligibleDevices=_eligibleDevices - In the implementation block
@property (assign,nonatomic) long long wifiErrorCount;                                       //@synthesize wifiErrorCount=_wifiErrorCount - In the implementation block
@property (assign,nonatomic) long long bluetoothErrorCount;                                  //@synthesize bluetoothErrorCount=_bluetoothErrorCount - In the implementation block
@property (assign,nonatomic) char presentedBluetoothError;                                   //@synthesize presentedBluetoothError=_presentedBluetoothError - In the implementation block
@property (assign,nonatomic) char presentedWiFiError;                                        //@synthesize presentedWiFiError=_presentedWiFiError - In the implementation block
@property (assign,nonatomic) char currentlyAdvertising;                                      //@synthesize currentlyAdvertising=_currentlyAdvertising - In the implementation block
@property (assign,nonatomic) long long idsMacCountCache;                                     //@synthesize idsMacCountCache=_idsMacCountCache - In the implementation block
@property (nonatomic,retain) NSDate * advertisingChangedDate;                                //@synthesize advertisingChangedDate=_advertisingChangedDate - In the implementation block
@property (nonatomic,retain) NSDate * wristStateChangedDate;                                 //@synthesize wristStateChangedDate=_wristStateChangedDate - In the implementation block
@property (nonatomic,retain) NSDate * lockStateChangedDate;                                  //@synthesize lockStateChangedDate=_lockStateChangedDate - In the implementation block
@property (nonatomic,retain) NSDate * nearbyDeviceChangedDate;                               //@synthesize nearbyDeviceChangedDate=_nearbyDeviceChangedDate - In the implementation block
@property (nonatomic,retain) NSDate * pipeConnectionChangedDate;                             //@synthesize pipeConnectionChangedDate=_pipeConnectionChangedDate - In the implementation block
@property (assign,nonatomic) char previousConnectedState;                                    //@synthesize previousConnectedState=_previousConnectedState - In the implementation block
@property (assign,nonatomic) char cachedMacWiFiState;                                        //@synthesize cachedMacWiFiState=_cachedMacWiFiState - In the implementation block
@property (assign,nonatomic) char cachedWatchWiFiState;                                      //@synthesize cachedWatchWiFiState=_cachedWatchWiFiState - In the implementation block
@property (assign,nonatomic) char wifiStateNeedsUpdating;                                    //@synthesize wifiStateNeedsUpdating=_wifiStateNeedsUpdating - In the implementation block
@property (assign,nonatomic) char preventRadarNotification;                                  //@synthesize preventRadarNotification=_preventRadarNotification - In the implementation block
@property (nonatomic,retain) SDAutoUnlockConnectionCacher * connectionCacher;                //@synthesize connectionCacher=_connectionCacher - In the implementation block
@property (nonatomic,retain) SDAutoUnlockLogRequest * logRequester;                          //@synthesize logRequester=_logRequester - In the implementation block
@property (nonatomic,retain) NSMutableArray * previousSessionIDs;                            //@synthesize previousSessionIDs=_previousSessionIDs - In the implementation block
@property (nonatomic,retain) SDAutoUnlockIconTransferStore * iconTransferStore;              //@synthesize iconTransferStore=_iconTransferStore - In the implementation block
@property (nonatomic,copy) NSString * state;                                                 //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) char attemptInProgress;                                         //@synthesize attemptInProgress=_attemptInProgress - In the implementation block
@property (nonatomic,retain) NSData * attemptExternalACMContext;                             //@synthesize attemptExternalACMContext=_attemptExternalACMContext - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedManager;
-(id)init;
-(NSString *)state;
-(void)setState:(NSString *)arg1 ;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(void)start;
-(unsigned long long)stateHandle;
-(void)setStateHandle:(unsigned long long)arg1 ;
-(long long)attemptCount;
-(void)setAttemptCount:(long long)arg1 ;
-(void)setScanTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)scanTimer;
-(long long)attemptType;
-(id)stringForState:(long long)arg1 ;
-(os_state_data_s*)dumpState;
-(NSMutableSet *)serviceClients;
-(void)setServiceClients:(NSMutableSet *)arg1 ;
-(void)generateStateDump;
-(NSHashTable *)observerTable;
-(void)setScanner:(SFDeviceDiscovery *)arg1 ;
-(SFDeviceDiscovery *)scanner;
-(SDAutoUnlockSuggestionManager *)suggestionManager;
-(void)setSuggestionManager:(SDAutoUnlockSuggestionManager *)arg1 ;
-(void)autoUnlockStateWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)cancelEnablingAllDevices;
-(void)repairCloudPairing;
-(void)eligibleDevicesRequestFromBundleID:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)enableAutoUnlockWithDevice:(id)arg1 passcode:(id)arg2 ;
-(void)cancelEnablingAutoUnlockForDevice:(id)arg1 ;
-(void)disableAutoUnlockForDevice:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)attemptAutoUnlockForType:(long long)arg1 ;
-(void)cancelAutoUnlock;
-(void)authPromptInfoWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)transportDidChangeDevices:(id)arg1 ;
-(void)transportDidChangeNearbyState:(id)arg1 ;
-(void)transport:(id)arg1 didReceivePairingRequestWithSessionID:(id)arg2 deviceID:(id)arg3 requestData:(id)arg4 ;
-(void)transport:(id)arg1 didReceiveDisableMessage:(id)arg2 fromDeviceID:(id)arg3 ;
-(void)setAwdlInfo:(NSDictionary *)arg1 ;
-(NSDictionary *)awdlInfo;
-(NSObject*<OS_dispatch_queue>)sessionManagerQueue;
-(void)onqueue_start;
-(void)addNotificationsObservers;
-(void)initializeAttemptState;
-(void)initializeCaptureBlock;
-(void)updateAdvertising;
-(void)loadPresentedBluetoothError;
-(void)loadPresentedWiFiError;
-(void)setCachedMacWiFiState:(char)arg1 ;
-(void)setCachedWatchWiFiState:(char)arg1 ;
-(void)setMacBeenUnlocked:(char)arg1 ;
-(void)handleBLEDataReceivedNotification:(id)arg1 ;
-(void)keyBagLockStateChange:(id)arg1 ;
-(void)handleWiFiPowerChanged:(id)arg1 ;
-(void)handleBluetoothPowerChanged:(id)arg1 ;
-(void)screenLockUnlocked:(id)arg1 ;
-(NSString *)incrementedCountID;
-(void)setEligibleDevices:(NSSet *)arg1 ;
-(void)createPairingLockSessionWithDevice:(id)arg1 passcode:(id)arg2 ;
-(void)notifyObserverOfFailedToEnableDevice:(id)arg1 error:(id)arg2 ;
-(NSMutableDictionary *)lockPairingSessions;
-(void)cancelEnablingAutoUnlockForDeviceID:(id)arg1 ;
-(char)disablePairingForDeviceID:(id)arg1 pairingID:(id)arg2 ;
-(void)attemptAutoUnlockForType:(long long)arg1 preventRadarNotification:(char)arg2 ;
-(void)attemptAutoUnlockForType:(long long)arg1 externalACMContext:(id)arg2 preventRadarNotification:(char)arg3 bundlePath:(id)arg4 appName:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)setAttemptActivatedHandler:(id)arg1 ;
-(void)setAttemptType:(long long)arg1 ;
-(void)setAttemptBundlePath:(NSString *)arg1 ;
-(void)setAttemptAppName:(NSString *)arg1 ;
-(void)setAttemptExternalACMContext:(NSData *)arg1 ;
-(void)setPreventRadarNotification:(char)arg1 ;
-(void)generateAttemptForType:(long long)arg1 ;
-(void)attemptAutoUnlock;
-(void)notifyObserverOfAttemptBeganWithDevice:(id)arg1 ;
-(void)notifyObserversOfUnlockFailureWithResults:(id)arg1 error:(id)arg2 ;
-(NSData *)attemptExternalACMContext;
-(void)notifyObserversOfUnlockCompletionWithDevice:(id)arg1 ;
-(char)attemptInProgress;
-(void)setConnectedBluetoothDevices:(long long)arg1 ;
-(void)setTimeSinceLastMachineWake:(long long)arg1 ;
-(void)setLastSleepType:(long long)arg1 ;
-(long long)connectedBluetoothDevices;
-(long long)timeSinceLastMachineWake;
-(long long)lastSleepType;
-(void)setAttemptStart:(NSDate *)arg1 ;
-(char)macBeenUnlocked;
-(void)setAttemptInProgress:(char)arg1 ;
-(char)cachedMacWiFiState;
-(char)presentedWiFiError;
-(void)setAttemptID:(NSString *)arg1 ;
-(void)setScanAutoUnlockDevices:(NSSet *)arg1 ;
-(SDAutoUnlockConnectionCacher *)connectionCacher;
-(void)startScannerWithWatchBluetoothIDs:(id)arg1 phoneBluetoothIDs:(id)arg2 ;
-(void)createLockSessionWithWatchDevice:(id)arg1 ;
-(void)createProxySessionWithDeviceID:(id)arg1 ;
-(void)generateAppIconImageWithOptions:(unsigned)arg1 ;
-(void)restartScanTimer:(unsigned long long)arg1 ;
-(long long)errorCodeForBluetoothEnabled:(char)arg1 wifiEnabled:(char)arg2 ;
-(id)errorStringForBluetoothEnabled:(char)arg1 wifiEnabled:(char)arg2 ;
-(char)shouldShowErrorForBluetoothEnabled:(char)arg1 ;
-(id)attemptActivatedHandler;
-(void)setAttemptDevice:(SFAutoUnlockDevice *)arg1 ;
-(void)setAuthSessionError:(NSError *)arg1 ;
-(void)setIncrementedCountID:(NSString *)arg1 ;
-(void)setProxyNotAvailableForUnlock:(char)arg1 ;
-(void)setScanWatchIDs:(NSSet *)arg1 ;
-(void)setScanPhoneIDs:(NSSet *)arg1 ;
-(void)invalidateScanner;
-(void)cleanUpProxySessions;
-(char)wifiStateNeedsUpdating;
-(void)cancelAutoUnlockWithCancelReason:(long long)arg1 usingTool:(char)arg2 ;
-(NSMutableDictionary *)lockAuthSessions;
-(NSMutableArray *)canceledAuthLockSessions;
-(SFAutoUnlockDevice *)attemptDevice;
-(NSDate *)attemptStart;
-(void)invalidateAttempt;
-(void)setScanErrorString:(NSString *)arg1 ;
-(NSString *)attemptID;
-(NSString *)attemptBundlePath;
-(NSString *)attemptAppName;
-(void)setIconTransferStore:(SDAutoUnlockIconTransferStore *)arg1 ;
-(void)sendDisableMessageToDeviceID:(id)arg1 pairingID:(id)arg2 ;
-(void)handleDisableMessageForLock:(id)arg1 fromDeviceID:(id)arg2 ;
-(NSMutableDictionary *)keyPairingSessions;
-(NSMutableArray *)canceledPairingKeySessions;
-(void)disableKeyPairingForDeviceID:(id)arg1 ;
-(NSMutableArray *)locksWithAKSTokens;
-(NSMutableDictionary *)keyAuthSessions;
-(NSMutableArray *)keysWithAKSTokens;
-(char)cachedWatchWiFiState;
-(NSMutableDictionary *)proxySessions;
-(long long)proxyErrorCode;
-(long long)lastProxyState;
-(void)setLastProxyState:(long long)arg1 ;
-(void)setProxyErrorCode:(long long)arg1 ;
-(void)updateStringForProxySession;
-(void)setNotifiedForProxy:(char)arg1 ;
-(void)setProxyDiscoverTime:(double)arg1 ;
-(void)setProxyDeviceModel:(NSString *)arg1 ;
-(void)setProxyConnectionTime:(double)arg1 ;
-(void)setProxyRSSI:(int)arg1 ;
-(void)notifyObserverOfEnabledDevice:(id)arg1 ;
-(void)handleLockSessionCompleted:(id)arg1 error:(id)arg2 ;
-(void)handleProxySessionCompleted:(id)arg1 error:(id)arg2 ;
-(void)createRadarForError:(id)arg1 devices:(id)arg2 rangingResults:(id)arg3 ;
-(void)decrementAttemptCount;
-(id)baseResultsDictionaryForError:(id)arg1 ;
-(void)handleLockConnectionStartedForSession:(id)arg1 ;
-(void)handleProxyConnectionStartedForSession:(id)arg1 ;
-(char)notifiedForProxy;
-(void)incrementAttemptCount;
-(char)shouldShowErrorForWiFiEnabled:(char)arg1 ;
-(int)proxyRSSI;
-(void)notifyObserverOfKeyDeviceLockWithDevice:(id)arg1 ;
-(char)extendedTimer;
-(void)setExtendedTimer:(char)arg1 ;
-(void)setIdsMacCountCache:(long long)arg1 ;
-(NSSet *)eligibleDevices;
-(void)setNearbyDeviceChangedDate:(NSDate *)arg1 ;
-(void)createPairingKeySessionWithIdentifier:(id)arg1 deviceID:(id)arg2 requestData:(id)arg3 ;
-(void)handleFoundPeer:(id)arg1 ;
-(void)handleBLEScanTimerFired;
-(void)invalidateScanTimer;
-(NSSet *)scanWatchIDs;
-(NSSet *)scanPhoneIDs;
-(void)cancelAllLockSessionsForScanTimeout;
-(void)handleScanTimerFired;
-(NSString *)scanErrorString;
-(NSString *)proxyDeviceModel;
-(double)proxyDiscoverTime;
-(NSError *)authSessionError;
-(char)proxyNotAvailableForUnlock;
-(NSSet *)scanAutoUnlockDevices;
-(char)advertisingEnabled;
-(char)watchLockedAndOnWrist;
-(char)currentlyAdvertising;
-(void)setAdvertisingChangedDate:(NSDate *)arg1 ;
-(void)setCurrentlyAdvertising:(char)arg1 ;
-(long long)idsMacCountCache;
-(void)setLockStateChangedDate:(NSDate *)arg1 ;
-(void)handleLockStateChanged;
-(void)setPipeConnectionChangedDate:(NSDate *)arg1 ;
-(char)preventRadarNotification;
-(SDAutoUnlockLogRequest *)logRequester;
-(void)setLogRequester:(SDAutoUnlockLogRequest *)arg1 ;
-(void)setBluetoothErrorCount:(long long)arg1 ;
-(void)setPresentedBluetoothError:(char)arg1 ;
-(void)savePresentedBluetoothError;
-(void)setWifiStateNeedsUpdating:(char)arg1 ;
-(void)setWifiErrorCount:(long long)arg1 ;
-(void)setPresentedWiFiError:(char)arg1 ;
-(void)savePresentedWiFiError;
-(char)presentedBluetoothError;
-(long long)bluetoothErrorCount;
-(long long)wifiErrorCount;
-(NSDate *)lockStateChangedDate;
-(void)loadPreviousSessionIDs;
-(NSMutableArray *)previousSessionIDs;
-(void)setPreviousSessionIDs:(NSMutableArray *)arg1 ;
-(void)sessionDidReceiveKeyDeviceLocked:(id)arg1 ;
-(void)session:(id)arg1 didCompleteWithError:(id)arg2 ;
-(void)sessionDidStartConnection:(id)arg1 ;
-(void)sessionDidSendInitialData:(id)arg1 ;
-(void)handleDisableMessageForKey:(id)arg1 fromDeviceID:(id)arg2 ;
-(void)createKeySessionWithBLEDevice:(id)arg1 sessionID:(id)arg2 wrapper:(id)arg3 useEncryption:(char)arg4 ;
-(void)clearAllKeysWithTokens;
-(char)unlockEnabledForPeer:(id)arg1 ;
-(char)proxyAdvertisementForPeer:(id)arg1 ;
-(char)watchLockedOnWristForPeer:(id)arg1 ;
-(long long)idsMacCount;
-(void)addServiceClientForIdentifier:(id)arg1 ;
-(void)removeServiceClientForIdentifier:(id)arg1 ;
-(void)wristStateChanged:(id)arg1 ;
-(void)pipeConnectionChanged:(id)arg1 ;
-(void)handleNearbyStateChanged;
-(void)storePreviousSessionID:(id)arg1 ;
-(char)previousSessionExists:(id)arg1 ;
-(void)setSessionManagerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setObserverTable:(NSHashTable *)arg1 ;
-(void)setLockAuthSessions:(NSMutableDictionary *)arg1 ;
-(void)setCanceledPairingKeySessions:(NSMutableArray *)arg1 ;
-(void)setCanceledAuthLockSessions:(NSMutableArray *)arg1 ;
-(void)setKeyAuthSessions:(NSMutableDictionary *)arg1 ;
-(void)setLockPairingSessions:(NSMutableDictionary *)arg1 ;
-(void)setKeyPairingSessions:(NSMutableDictionary *)arg1 ;
-(void)setProxySessions:(NSMutableDictionary *)arg1 ;
-(void)setLocksWithAKSTokens:(NSMutableArray *)arg1 ;
-(void)setKeysWithAKSTokens:(NSMutableArray *)arg1 ;
-(char)watchUnlockEnabled;
-(void)setWatchUnlockEnabled:(char)arg1 ;
-(NSData *)previousMacAddressData;
-(void)setPreviousMacAddressData:(NSData *)arg1 ;
-(char)previousNearbyState;
-(void)setPreviousNearbyState:(char)arg1 ;
-(NSObject*<OS_dispatch_source>)nearbyPushTimer;
-(void)setNearbyPushTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(double)proxyConnectionTime;
-(NSDate *)advertisingChangedDate;
-(NSDate *)wristStateChangedDate;
-(void)setWristStateChangedDate:(NSDate *)arg1 ;
-(NSDate *)nearbyDeviceChangedDate;
-(NSDate *)pipeConnectionChangedDate;
-(char)previousConnectedState;
-(void)setPreviousConnectedState:(char)arg1 ;
-(void)setConnectionCacher:(SDAutoUnlockConnectionCacher *)arg1 ;
-(SDAutoUnlockIconTransferStore *)iconTransferStore;
@end

