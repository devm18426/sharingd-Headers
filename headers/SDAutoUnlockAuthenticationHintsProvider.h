/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:14 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/AuthenticationHintsProvider.h>
#import <libobjc.A.dylib/SDAutoUnlockSessionManagerObserver.h>

@protocol AuthenticationHintsDelegate, OS_dispatch_queue;
@class NSDate, NSXPCConnection, NSObject, NSXPCListener, NSString;

@interface SDAutoUnlockAuthenticationHintsProvider : NSObject <NSXPCListenerDelegate, AuthenticationHintsProvider, SDAutoUnlockSessionManagerObserver> {

	char _deactivateAfterLeeway;
	char _usingTool;
	char _waitingForResponse;
	NSDate* _attemptStart;
	long long _attemptType;
	NSXPCConnection* _connection;
	id<AuthenticationHintsDelegate> _hintsDelegate;
	NSObject*<OS_dispatch_queue> _hintProviderQueue;
	NSXPCListener* _listener;
	NSString* _pamServiceName;
	NSString* _userName;

}

@property (retain) NSDate * attemptStart;                                       //@synthesize attemptStart=_attemptStart - In the implementation block
@property (assign) long long attemptType;                                       //@synthesize attemptType=_attemptType - In the implementation block
@property (retain) NSXPCConnection * connection;                                //@synthesize connection=_connection - In the implementation block
@property (assign) char deactivateAfterLeeway;                                  //@synthesize deactivateAfterLeeway=_deactivateAfterLeeway - In the implementation block
@property (retain) id<AuthenticationHintsDelegate> hintsDelegate;               //@synthesize hintsDelegate=_hintsDelegate - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> hintProviderQueue;              //@synthesize hintProviderQueue=_hintProviderQueue - In the implementation block
@property (retain) NSXPCListener * listener;                                    //@synthesize listener=_listener - In the implementation block
@property (nonatomic,copy) NSString * pamServiceName;                           //@synthesize pamServiceName=_pamServiceName - In the implementation block
@property (nonatomic,copy) NSString * userName;                                 //@synthesize userName=_userName - In the implementation block
@property (assign) char usingTool;                                              //@synthesize usingTool=_usingTool - In the implementation block
@property (assign) char waitingForResponse;                                     //@synthesize waitingForResponse=_waitingForResponse - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(NSXPCConnection *)connection;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(NSXPCListener *)listener;
-(void)setListener:(NSXPCListener *)arg1 ;
-(NSString *)userName;
-(void)setUserName:(NSString *)arg1 ;
-(long long)attemptType;
-(void)activate:(id)arg1 userName:(id)arg2 mode:(long long)arg3 options:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)activate:(id)arg1 userName:(id)arg2 sessionUnlocked:(char)arg3 reply:(/*^block*/id)arg4 ;
-(void)deactivateWithContext:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)deactivate:(/*^block*/id)arg1 ;
-(void)session:(id)arg1 didBeginAttemptWithDevice:(id)arg2 ;
-(void)session:(id)arg1 didCompleteUnlockWithDevice:(id)arg2 ;
-(void)session:(id)arg1 didFailUnlockWithResults:(id)arg2 error:(id)arg3 incrementedAttempt:(char)arg4 ;
-(void)setAttemptType:(long long)arg1 ;
-(void)setAttemptStart:(NSDate *)arg1 ;
-(NSDate *)attemptStart;
-(void)setUsingTool:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)hintProviderQueue;
-(void)invalidateWithContext:(id)arg1 ;
-(char)connectionHasEntitlement;
-(void)setHintsDelegate:(id<AuthenticationHintsDelegate>)arg1 ;
-(void)setDeactivateAfterLeeway:(char)arg1 ;
-(char)usingTool;
-(void)setWaitingForResponse:(char)arg1 ;
-(void)setPamServiceName:(NSString *)arg1 ;
-(char)deactivateAfterLeeway;
-(id)deactivateReasonToString:(long long)arg1 ;
-(id<AuthenticationHintsDelegate>)hintsDelegate;
-(char)waitingForResponse;
-(NSString *)pamServiceName;
-(id)localizedErrorStringForError:(id)arg1 ;
-(void)setHintProviderQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

