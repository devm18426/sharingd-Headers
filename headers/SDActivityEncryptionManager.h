/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:13 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSMutableDictionary, SDActivityEncryptionKey, NSData, NSString;

@interface SDActivityEncryptionManager : NSObject {

	NSMutableDictionary* _deviceIdentifierToDecryptionKey;
	SDActivityEncryptionKey* _encryptionKey;
	NSData* _wrappingKey;
	char _shouldRefreshWrappingKey;

}

@property (readonly) NSString * state; 
@property (nonatomic,readonly) SDActivityEncryptionKey * encryptionKey; 
@property (nonatomic,readonly) NSData * dataRepresentationForCurrentEncryptionKey; 
+(id)sharedEncryptionManager;
-(void)dealloc;
-(id)init;
-(NSString *)state;
-(id)allKeys;
-(SDActivityEncryptionKey *)encryptionKey;
-(void)removeObservers;
-(void)addObservers;
-(char)deleteAllEncryptionAndDecryptionKeys;
-(id)cachedDecryptionKeyForDeviceIdentifier:(id)arg1 ;
-(void)resetStateRequested:(id)arg1 ;
-(void)getTagAndCounterWhileEncryptingBytesInPlace:(unsigned char)arg1 forAdvertisementWithVersion:(unsigned char)arg2 handler:(/*^block*/id)arg3 ;
-(void)bumpEncryptionKeyCounterValue;
-(NSData *)dataRepresentationForCurrentEncryptionKey;
-(id)newDecryptionKeyFromDataRepresentation:(id)arg1 ;
-(id)decryptionKeyForDeviceIdentifier:(id)arg1 ;
-(void)setDecryptionKey:(id)arg1 forDeviceIdentifier:(id)arg2 ;
-(id)unwrappedDataRepresentationForKey:(id)arg1 ;
-(char)saveEncryptionKeyDataRepresentation:(id)arg1 ;
-(id)loadEncryptionKeyDataRepresentation;
-(void)generateNewEncryptionKey;
-(char)saveDecryptionKeyDataRepresentation:(id)arg1 forDeviceIdentifier:(id)arg2 ;
-(id)loadDecryptionKeyDataRepresentationForDeviceIdentifier:(id)arg1 ;
-(id)loadWrappingKeyData;
-(id)baseDictEncryptionKey;
-(id)baseDictDecryptionKeyForDeviceIdentifier:(id)arg1 ;
-(id)baseDict;
-(id)baseDictWrappingKey;
-(void)testWrappingKeychainItem;
-(id)loadKeyDataRepresentationWithBaseDict:(id)arg1 ;
-(char)saveKeyDataRepresentation:(id)arg1 withBaseDict:(id)arg2 ;
@end

