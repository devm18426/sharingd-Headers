/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:16 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SDXPCAppleIDAuthInterface.h>
#import <libobjc.A.dylib/SDXPCClientInterface.h>
#import <libobjc.A.dylib/SDXPCCoordinatedAlertsInterface.h>
#import <libobjc.A.dylib/SDXPCDeviceDiscoveryInterface.h>
#import <libobjc.A.dylib/SDXPCDiagnosticsInterface.h>
#import <libobjc.A.dylib/SDXPCNFCTagReaderInterface.h>
#import <libobjc.A.dylib/SDXPCProximityClientInterface.h>
#import <libobjc.A.dylib/SDXPCRemoteAutoFillSessionInterface.h>
#import <libobjc.A.dylib/SDXPCRemoteInteractionSessionInterface.h>
#import <libobjc.A.dylib/SDXPCServiceInterface.h>
#import <libobjc.A.dylib/SDXPCSessionInterface.h>
#import <libobjc.A.dylib/SDXPCUserNotificationInterface.h>

@class SFRemoteAutoFillSessionHelper, NSMutableSet, SFCoordinatedAlertRequest, SFDeviceDiscovery, SFUserAlert, NSString, SFProximityClient, SFRemoteInteractionSession, SFService, SFSession, SDXPCServer, NSXPCConnection;

@interface SDXPCConnection : NSObject <SDXPCAppleIDAuthInterface, SDXPCClientInterface, SDXPCCoordinatedAlertsInterface, SDXPCDeviceDiscoveryInterface, SDXPCDiagnosticsInterface, SDXPCNFCTagReaderInterface, SDXPCProximityClientInterface, SDXPCRemoteAutoFillSessionInterface, SDXPCRemoteInteractionSessionInterface, SDXPCServiceInterface, SDXPCSessionInterface, SDXPCUserNotificationInterface> {

	SFRemoteAutoFillSessionHelper* _afsHelper;
	NSMutableSet* _assertions;
	SFCoordinatedAlertRequest* _caRequest;
	SFDeviceDiscovery* _ddRequest;
	char _diagnosticBLEModeStarted;
	char _entitledBluetoothUserInteraction;
	char _entitledClient;
	char _entitledCoordinatedAlerts;
	char _entitledDeviceDiscovery;
	char _entitledDiagnostics;
	char _entitledProximityClient;
	char _entitledRemoteInteractionSession;
	char _entitledService;
	char _entitledSession;
	SFUserAlert* _notification;
	NSString* _preventExitForLocaleReason;
	SFProximityClient* _proxClient;
	SFRemoteInteractionSession* _riSession;
	SFService* _service;
	SFSession* _session;
	SDXPCServer* _server;
	char _unlockTestClientStarted;
	NSXPCConnection* _xpcCnx;

}
-(void)connectionInvalidated;
-(int)_entitled:(id)arg1 state:(char*)arg2 label:(id)arg3 ;
-(void)diagnosticControl:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)diagnosticShow:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)activateAssertionWithIdentifier:(id)arg1 ;
-(void)diagnosticLogControl:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_invalidateAssertions;
-(void)repairDevice:(id)arg1 flags:(unsigned)arg2 completion:(/*^block*/id)arg3 ;
-(void)setAudioRoutingScore:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)proximityClientUpdate:(id)arg1 ;
-(void)personInfoWithEmailOrPhone:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)requestWithInfo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)activityStateWithCompletion:(/*^block*/id)arg1 ;
-(void)nfcTagReaderUIActivateWithEndpoint:(id)arg1 params:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)retriggerProximitySetup:(/*^block*/id)arg1 ;
-(void)setupDevice:(id)arg1 homeIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)showDevicePickerWithInfo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)triggerHomeKitDeviceDetectedWithURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initWithServer:(id)arg1 xpcConnection:(id)arg2 ;
-(void)servicePeerDisconnected:(id)arg1 error:(id)arg2 ;
-(void)accountForAppleID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)myAccountWithCompletion:(/*^block*/id)arg1 ;
-(void)statusInfoWithCompletion:(/*^block*/id)arg1 ;
-(void)appleIDInfoWithCompletion:(/*^block*/id)arg1 ;
-(void)clearXPCHelperImageCacheWithCompletion:(/*^block*/id)arg1 ;
-(void)contactIDForEmailHash:(id)arg1 phoneHash:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)displayNameForEmailHash:(id)arg1 phoneHash:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)displayStringForContactIdentifier:(id)arg1 deviceIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)findContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)getDeviceAssets:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)getPeopleSuggestions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)openSetupURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)preheatXPCConnection;
-(void)preventExitForLocaleReason:(id)arg1 ;
-(void)reenableProxCardType:(unsigned char)arg1 completion:(/*^block*/id)arg2 ;
-(void)retriggerProximityPairing:(/*^block*/id)arg1 ;
-(void)testContinuityKeyboardBegin:(char)arg1 ;
-(void)wifiPasswordSharingAvailabilityWithCompletion:(/*^block*/id)arg1 ;
-(void)startProxCardTransactionWithOptions:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)coordinatedAlertsRequestStart:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)coordinatedAlertsRequestFinish;
-(void)deviceDiscoveryActivate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deviceDiscoveryUpdate:(id)arg1 ;
-(void)deviceDiscoveryFastScanTrigger:(id)arg1 ;
-(void)deviceDiscoveryFastScanCancel:(id)arg1 ;
-(void)bluetoothUserInteraction;
-(void)diagnosticBLEModeWithCompletion:(/*^block*/id)arg1 ;
-(void)diagnosticMock:(id)arg1 device:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)diagnosticMockStart:(/*^block*/id)arg1 ;
-(void)diagnosticMockStop:(/*^block*/id)arg1 ;
-(void)diagnosticUnlockTestClientWithDevice:(id)arg1 ;
-(void)diagnosticUnlockTestServer;
-(void)proximityClientActivate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)proximityClientDismissContentForDevice:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)proximityClientProvideContent:(id)arg1 forDevice:(id)arg2 force:(char)arg3 completion:(/*^block*/id)arg4 ;
-(void)proximityClientSuppressDevice:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)proximityClientStopSuppressingDevice:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)proximityClientUpdateContent:(id)arg1 forDevice:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)proximityClientRequestScannerTimerReset;
-(void)autoFillHelperActivate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)autoFillHelperDidPickUsername:(id)arg1 password:(id)arg2 error:(id)arg3 ;
-(void)autoFillHelperTryPIN:(id)arg1 ;
-(void)autoFillHelperUserNotificationDidActivate:(id)arg1 ;
-(void)autoFillHelperUserNotificationDidDismiss:(id)arg1 ;
-(void)remoteInteractionSessionActivate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remoteInteractionSessionSendPayload:(id)arg1 ;
-(void)serviceActivate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)serviceUpdate:(id)arg1 ;
-(void)serviceSendEvent:(id)arg1 ;
-(void)serviceSendFrameType:(unsigned char)arg1 data:(id)arg2 peer:(id)arg3 ;
-(void)serviceSendRequest:(id)arg1 ;
-(void)serviceSendResponse:(id)arg1 ;
-(void)sessionActivate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)sessionSendEvent:(id)arg1 ;
-(void)sessionSendFrameType:(unsigned char)arg1 data:(id)arg2 ;
-(void)sessionSendRequest:(id)arg1 ;
-(void)sessionSendResponse:(id)arg1 ;
-(void)userNotificationPresent:(id)arg1 ;
-(void)_getPeopleInfo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_getPeopleSuggestions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(int)_entitledService:(id)arg1 state:(char*)arg2 ;
@end

