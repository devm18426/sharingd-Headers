/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:03 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSStreamDelegate.h>

@protocol SDStreamHandlerDelegate;
@class NSString, NSInputStream, NSOutputStream, NSTimer, NSError, NSMutableData, NSMutableArray, NSMutableDictionary, NSData, NSDate;

@interface SDStreamHandler : NSObject <NSStreamDelegate> {

	char _shouldReadNetwork;
	char _usingMessages;
	char _checkedCert;
	char _shouldStop;
	char _registeredStreams;
	char _bufferSpaceAvailable;
	char _client;
	char _loggedTransfer;
	unsigned _inMessageLength;
	NSString* _bundleID;
	id<SDStreamHandlerDelegate> _delegate;
	NSInputStream* _inputStream;
	NSOutputStream* _outputStream;
	NSTimer* _openTimer;
	NSError* _streamError;
	NSMutableData* _outputStreamData;
	long long _byteIndex;
	NSMutableData* _outMessage;
	NSMutableArray* _messageQueue;
	NSMutableDictionary* _handlers;
	long long _bytesRead;
	NSData* _inMessage;
	NSMutableData* _inData;
	unsigned long long _inputState;
	long long _wroteToNetwork;
	long long _readFromNetwork;
	NSDate* _timeOpened;
	NSDate* _timeToOpen;

}

@property (assign) char checkedCert;                                  //@synthesize checkedCert=_checkedCert - In the implementation block
@property (assign) char shouldStop;                                   //@synthesize shouldStop=_shouldStop - In the implementation block
@property (assign) char registeredStreams;                            //@synthesize registeredStreams=_registeredStreams - In the implementation block
@property (assign) char bufferSpaceAvailable;                         //@synthesize bufferSpaceAvailable=_bufferSpaceAvailable - In the implementation block
@property (retain) NSTimer * openTimer;                               //@synthesize openTimer=_openTimer - In the implementation block
@property (getter=isClient) char client;                              //@synthesize client=_client - In the implementation block
@property (retain) NSError * streamError;                             //@synthesize streamError=_streamError - In the implementation block
@property (retain) NSInputStream * inputStream;                       //@synthesize inputStream=_inputStream - In the implementation block
@property (retain) NSOutputStream * outputStream;                     //@synthesize outputStream=_outputStream - In the implementation block
@property (retain) NSMutableData * outputStreamData;                  //@synthesize outputStreamData=_outputStreamData - In the implementation block
@property (assign) long long byteIndex;                               //@synthesize byteIndex=_byteIndex - In the implementation block
@property (retain) NSMutableData * outMessage;                        //@synthesize outMessage=_outMessage - In the implementation block
@property (retain) NSMutableArray * messageQueue;                     //@synthesize messageQueue=_messageQueue - In the implementation block
@property (retain) NSMutableDictionary * handlers;                    //@synthesize handlers=_handlers - In the implementation block
@property (assign) long long bytesRead;                               //@synthesize bytesRead=_bytesRead - In the implementation block
@property (assign) unsigned inMessageLength;                          //@synthesize inMessageLength=_inMessageLength - In the implementation block
@property (retain) NSData * inMessage;                                //@synthesize inMessage=_inMessage - In the implementation block
@property (retain) NSMutableData * inData;                            //@synthesize inData=_inData - In the implementation block
@property (assign) unsigned long long inputState;                     //@synthesize inputState=_inputState - In the implementation block
@property (assign) char loggedTransfer;                               //@synthesize loggedTransfer=_loggedTransfer - In the implementation block
@property (assign) long long wroteToNetwork;                          //@synthesize wroteToNetwork=_wroteToNetwork - In the implementation block
@property (assign) long long readFromNetwork;                         //@synthesize readFromNetwork=_readFromNetwork - In the implementation block
@property (retain) NSDate * timeOpened;                               //@synthesize timeOpened=_timeOpened - In the implementation block
@property (retain) NSDate * timeToOpen;                               //@synthesize timeToOpen=_timeToOpen - In the implementation block
@property (assign) char usingMessages;                                //@synthesize usingMessages=_usingMessages - In the implementation block
@property (assign) char shouldReadNetwork;                            //@synthesize shouldReadNetwork=_shouldReadNetwork - In the implementation block
@property (retain) NSString * bundleID;                               //@synthesize bundleID=_bundleID - In the implementation block
@property (__weak) id<SDStreamHandlerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id<SDStreamHandlerDelegate>)delegate;
-(void)setDelegate:(id<SDStreamHandlerDelegate>)arg1 ;
-(NSError *)streamError;
-(void)stream:(id)arg1 handleEvent:(unsigned long long)arg2 ;
-(void)setBundleID:(NSString *)arg1 ;
-(NSString *)bundleID;
-(void)start;
-(void)stop;
-(void)setClient:(char)arg1 ;
-(NSOutputStream *)outputStream;
-(void)_stop;
-(char)shouldStop;
-(void)setShouldStop:(char)arg1 ;
-(char)isClient;
-(NSInputStream *)inputStream;
-(id)messageWithData:(id)arg1 ;
-(long long)bytesRead;
-(NSMutableArray *)messageQueue;
-(void)setMessageQueue:(NSMutableArray *)arg1 ;
-(void)setInputStream:(NSInputStream *)arg1 ;
-(void)setOutputStream:(NSOutputStream *)arg1 ;
-(NSMutableDictionary *)handlers;
-(void)setHandlers:(NSMutableDictionary *)arg1 ;
-(void)setBytesRead:(long long)arg1 ;
-(void)setStreamError:(NSError *)arg1 ;
-(id)initWithInputStream:(id)arg1 outputStream:(id)arg2 isClient:(char)arg3 ;
-(void)applySSLSettings:(id)arg1 ;
-(void)startOpenTimer;
-(char)usingMessages;
-(void)stopIfReady;
-(void)logTransfer;
-(void)handleBytesForStream;
-(void)openTimerFired:(id)arg1 ;
-(void)handleOpenedStream:(id)arg1 ;
-(void)handleBytesAvailable;
-(void)handleSpaceAvailable;
-(void)invalidateOpenTimer;
-(void)setTCPProperties:(id)arg1 ;
-(char)checkedCert;
-(void)setCheckedCert:(char)arg1 ;
-(char)evaluateCert;
-(void)handleBytesForMessage;
-(void)handleSpaceForMessage;
-(void)handleSpaceForStream;
-(char)shouldReadNetwork;
-(id)headerWithLength:(unsigned)arg1 ;
-(void)handleHeaderRead;
-(void)handleMessageRead;
-(unsigned)parseHeader:(id)arg1 ;
-(id)trimHeader:(id)arg1 ;
-(void)resetReadState;
-(void)handleMessageWritten:(id)arg1 ;
-(void)setShouldReadNetwork:(char)arg1 ;
-(void)writeToStreamWithData:(id)arg1 ;
-(void)sendMessage:(id)arg1 withErrorHandler:(/*^block*/id)arg2 ;
-(void)sendMessage:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)setUsingMessages:(char)arg1 ;
-(char)registeredStreams;
-(void)setRegisteredStreams:(char)arg1 ;
-(char)bufferSpaceAvailable;
-(void)setBufferSpaceAvailable:(char)arg1 ;
-(NSTimer *)openTimer;
-(void)setOpenTimer:(NSTimer *)arg1 ;
-(NSMutableData *)outputStreamData;
-(void)setOutputStreamData:(NSMutableData *)arg1 ;
-(long long)byteIndex;
-(void)setByteIndex:(long long)arg1 ;
-(NSMutableData *)outMessage;
-(void)setOutMessage:(NSMutableData *)arg1 ;
-(unsigned)inMessageLength;
-(void)setInMessageLength:(unsigned)arg1 ;
-(NSData *)inMessage;
-(void)setInMessage:(NSData *)arg1 ;
-(NSMutableData *)inData;
-(void)setInData:(NSMutableData *)arg1 ;
-(unsigned long long)inputState;
-(void)setInputState:(unsigned long long)arg1 ;
-(char)loggedTransfer;
-(void)setLoggedTransfer:(char)arg1 ;
-(long long)wroteToNetwork;
-(void)setWroteToNetwork:(long long)arg1 ;
-(long long)readFromNetwork;
-(void)setReadFromNetwork:(long long)arg1 ;
-(NSDate *)timeOpened;
-(void)setTimeOpened:(NSDate *)arg1 ;
-(NSDate *)timeToOpen;
-(void)setTimeToOpen:(NSDate *)arg1 ;
@end

