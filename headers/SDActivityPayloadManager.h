/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:08 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/IDSServiceDelegate.h>

@class IDSService, RPCompanionLinkClient, SDActivityAdvertiser, SDActivityScanner, CUSystemMonitor, NSMutableDictionary, NSMutableArray, NSString;

@interface SDActivityPayloadManager : NSObject <IDSServiceDelegate> {

	IDSService* _activityService;
	IDSService* _encryptionService;
	RPCompanionLinkClient* _rapportDiscoveryClient;
	char _restrictionsDisabled;
	SDActivityAdvertiser* _advertiser;
	SDActivityScanner* _scanner;
	CUSystemMonitor* _systemMonitor;
	char _hsa2Enabled;
	NSMutableDictionary* _uniqueIDToKeyReplyDate;
	NSMutableDictionary* _messageIdentifierToKeyRequestRecords;
	NSMutableDictionary* _messageIdentifierToReplyRecords;
	NSMutableDictionary* _messageIdentifierToRequestRecords;
	int _systemPreferenceChangedToken;
	NSMutableArray* _cachedActivityPayloadsForDemo;

}

@property (readonly) NSString * state; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedPayloadManager;
-(id)init;
-(NSString *)state;
-(void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(char)arg4 error:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 incomingMessage:(id)arg3 fromID:(id)arg4 ;
-(void)messageWithIdentifier:(id)arg1 didSendWithSuccess:(char)arg2 error:(id)arg3 ;
-(id)dataFromUUID:(id)arg1 ;
-(void)sendActivityPayloadWithAdvertisementData:(id)arg1 forAdvertisementPayload:(id)arg2 activityIdentifier:(id)arg3 activityPayload:(id)arg4 ;
-(void)clearPersistedKeyRequests;
-(void)setUpHSA2Monitor;
-(void)setUpRapport;
-(void)setUpIDSServices;
-(void)setUpHandoffPreferenceMonitor;
-(id)createRapportClientWithDestinationDevice:(id)arg1 ;
-(void)handleEncryptionKeyRequestRapport:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)handlePayloadRequestRapport:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)handleEncryptionKeyRequestProtobuf:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleEncryptionKeyReplyRequestProtobuf:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handlePayloadRequestProtobuf:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handlePayloadReplyProtobuf:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleNewAdvertisementWithpayloadRequestProtobuf:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)logDashboardHandoffRequestViaTransportLinkType:(int)arg1 type:(id)arg2 success:(char)arg3 rtt:(double)arg4 ;
-(void)requestTimedOut:(id)arg1 ;
-(void)sendIDSEncryptionKeyRequest:(id)arg1 withRequestRecord:(id)arg2 desiredTimeout:(double)arg3 ;
-(void)sendRapportEncryptionKeyRequest:(id)arg1 withRequestRecord:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)handleEncryptionKeyReplyRapport:(id)arg1 options:(id)arg2 forRequestRecord:(id)arg3 fromDevice:(id)arg4 ;
-(id)protobufDataFromRequest:(id)arg1 ;
-(id)idsDeviceWithUniqueID:(id)arg1 onService:(id)arg2 ;
-(void)sendIDSActivityPayloadRequest:(id)arg1 withRequestRecord:(id)arg2 desiredTimeout:(double)arg3 ;
-(void)sendRapportActivityPayloadRequest:(id)arg1 withRequestRecord:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)handlePayloadReplyRapport:(id)arg1 options:(id)arg2 forRequestRecord:(id)arg3 fromDevice:(id)arg4 ;
-(void)setDecryptionKeyDataRepresentation:(id)arg1 forDeviceIdentifier:(id)arg2 ;
-(void)handleEncyptionKeyRequest:(id)arg1 fromIDSDevice:(id)arg2 withRequestIdentifier:(id)arg3 transportType:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)requestFromProtobufData:(id)arg1 ;
-(void)sendEncryptionKeyReplyRequestToDevice:(id)arg1 reply:(id)arg2 requestIdentifier:(id)arg3 ;
-(void)handleEncryptionKeyReply:(id)arg1 forRequestRecord:(id)arg2 fromDevice:(id)arg3 transportLinkType:(int)arg4 ;
-(void)activityPayloadReplySuccess:(id)arg1 ;
-(void)handlePayloadRequest:(id)arg1 fromIDSDevice:(id)arg2 withRequestIdentifier:(id)arg3 transportType:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)sendIDSActivityPayloadReply:(id)arg1 withReplyRecord:(id)arg2 ;
-(void)handlePayloadReply:(id)arg1 forRequestRecord:(id)arg2 fromDevice:(id)arg3 transportLinkType:(int)arg4 ;
-(void)triggerCloudPairingForUnpairedDevices;
-(void)sendEncryptionKeyRequestToDeviceIdentifier:(id)arg1 previousKeyIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)sendActivityPayloadRequestToDeviceIdentifier:(id)arg1 withAdvertisementPayload:(id)arg2 command:(id)arg3 timeout:(long long)arg4 completionHandler:(/*^block*/id)arg5 ;
@end

