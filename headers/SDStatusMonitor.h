/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:12 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <sharingd/sharingd-Structs.h>
#import <libobjc.A.dylib/CWEventDelegate.h>

@class NSNumber, NSString, NSMutableDictionary, CNContactStore, SDAirDropServer, NSDictionary, NSMutableString, NSMutableSet, CUSystemMonitor, CWWiFiClient, CWInterface, CNContact, NSDate, NSSet, NSArray, NSData, SFPowerSource;

@interface SDStatusMonitor : NSObject <CWEventDelegate> {

	char _activateStarted;
	NSNumber* _airDropAllowed;
	int _airDropCount;
	int _airDropModeNotifyToken;
	char _airDropPublished;
	int _airPlayPrefsToken;
	NSNumber* _backlightOn;
	int _backlightLevelToken;
	NSString* _bonjourName;
	char _carplayConnected;
	NSMutableDictionary* _certificates;
	NSString* _computerName;
	NSNumber* _computerToComputer;
	NSString* _consoleUser;
	unsigned _consoleUserID;
	CNContactStore* _contactStore;
	NSString* _currentDiscoverableMode;
	NSString* _deviceInformation;
	char _deviceIsHighPriority;
	NSNumber* _deviceKeyBagState;
	NSNumber* _deviceKeyBagUnlocked;
	NSNumber* _deviceSupportsWAPI;
	NSNumber* _deviceUIUnlocked;
	char _deviceWasUnlockedOnce;
	CFRunLoopSourceRef _dynamicStoreSource;
	char _finderAirDropEnabled;
	SDAirDropServer* _finderServer;
	NSNumber* _handoffVisible;
	NSMutableDictionary* _identities;
	int _keyBagUnlockToken;
	NSString* _localHostName;
	long long _mediaAccessControlSetting;
	NSDictionary* _mountPoints;
	NSString* _myAppleID;
	NSString* _myAppleIDCommonName;
	SecCertificateRef _myAppleIDIntermediateCertificate;
	SecCertificateRef _myAppleIDCertificate;
	SecIdentityRef _myAppleIDSecIdentity;
	NSMutableString* _myEmailHashes;
	NSMutableString* _myPhoneHashes;
	DNSServiceRef_tRef _nameMonitor;
	char _needsExitForLocaleChange;
	NSString* _netbiosName;
	unsigned _notifierObject;
	IONotificationPortRef _notifyPortRef;
	NSDictionary* _odisksMountPoints;
	long long _pairedWatchWristState;
	NSNumber* _personalHotspotAutoState;
	char _personalHotspotFamilyEnabled;
	NSMutableDictionary* _personalHotspotFamilyStates;
	NSNumber* _personalHotspotAllowed;
	IOPMConnectionRef _pmConnection;
	NSMutableSet* _preventExitForLocaleReasons;
	unsigned _rootPort;
	NSNumber* _screenOn;
	NSMutableDictionary* _serverNames;
	char _sleepModeOn;
	SCPreferencesRef _smbPreferences;
	NSMutableDictionary* _ssidHashes;
	CUSystemMonitor* _systemMonitor;
	unsigned _systemUIFlags;
	int _uiLockStatusToken;
	NSNumber* _wirelessAccessPoint;
	NSString* _workgroup;
	long long _watchWristState;
	unsigned _rootdomain;
	IONotificationPortRef _clamshellNotifyPort;
	CFRunLoopSourceRef _cgEventRunLoopSource;
	IONotificationPortRef _displayNotificationPort;
	unsigned _displayNotification;
	Apple80211Ref _wirelessRef;
	CWWiFiClient* _wifiClient;
	CWInterface* _defaultInterface;
	CWInterface* _awdlInterface;
	OpaqueLSSharedFileListRefRef _browserPrefs;
	CFVolumeObserverRef _volumeObserver;
	NSMutableDictionary* _longHashesToContactIdentifier;
	NSMutableDictionary* _mediumHashesToContactIdentifier;
	NSMutableSet* _shortHashes;
	char _controlCenterVisible;
	char _multipleUsersLoggedIn;
	CNContact* ___meCard;
	NSDictionary* _awdlState;
	NSDate* _lastDarkWakeDate;
	NSSet* _effectiveBlacklistedAppBundleIDs;

}

@property (nonatomic,readonly) CNContact * meCard;                                 //@synthesize __meCard=___meCard - In the implementation block
@property (readonly) char familyHotspotEnabled; 
@property (assign) char airDropPublished; 
@property (assign) char airplaneModeEnabled; 
@property (assign) char bluetoothEnabled; 
@property (retain) NSString * discoverableMode; 
@property (__weak) SDAirDropServer * finderServer; 
@property (assign) char wirelessEnabled; 
@property (readonly) NSDictionary * awdlInfo; 
@property (readonly) NSArray * awdlPeerList; 
@property (readonly) NSDictionary * awdlState;                                     //@synthesize awdlState=_awdlState - In the implementation block
@property (readonly) NSData * bluetoothAddress; 
@property (readonly) NSString * bonjourName; 
@property (readonly) NSString * computerName; 
@property (readonly) NSString * consoleUser; 
@property (readonly) NSString * deviceInformation; 
@property (readonly) long long deviceKeyBagState; 
@property (readonly) NSDate * lastDarkWakeDate;                                    //@synthesize lastDarkWakeDate=_lastDarkWakeDate - In the implementation block
@property (readonly) NSString * localHostName; 
@property (readonly) SFPowerSource * localPowerSource; 
@property (readonly) int minPersonImageSize; 
@property (readonly) NSString * modelCode; 
@property (readonly) NSString * modelName; 
@property (readonly) NSString * myAccountAppleID; 
@property (readonly) NSString * myAltDSID; 
@property (readonly) NSString * myAppleID; 
@property (readonly) NSString * myAppleIDCommonName; 
@property (readonly) NSArray * myAppleIDEmailAddresses; 
@property (readonly) NSString * myAppleIDEmailHash; 
@property (readonly) NSString * myAppleIDPhoneHash; 
@property (readonly) NSArray * myAppleIDPhoneNumbers; 
@property (readonly) NSDictionary * myAppleIDValidationRecord; 
@property (readonly) NSString * myEmail; 
@property (readonly) NSString * myGivenName; 
@property (readonly) NSString * myName; 
@property (readonly) NSString * myPrimaryEmail; 
@property (readonly) NSData * myMediumHashes; 
@property (readonly) NSData * myShortHashesForAirDrop; 
@property (readonly) NSString * netbiosName; 
@property (readonly) int pairedWatchLockState; 
@property (readonly) long long pairedWatchWristState; 
@property (readonly) int sidebarMaxCount; 
@property (readonly) NSString * someComputerName; 
@property (readonly) unsigned systemUIFlags; 
@property (readonly) NSString * workgroup; 
@property (readonly) int workgroupThreshold; 
@property (readonly) long long watchWristState; 
@property (getter=isAirDropAllowed,readonly) char airdropAllowed; 
@property (getter=isAirDropAvailable,readonly) char airdropAvailable; 
@property (readonly) NSSet * effectiveBlacklistedAppBundleIDs;                     //@synthesize effectiveBlacklistedAppBundleIDs=_effectiveBlacklistedAppBundleIDs - In the implementation block
@property (readonly) char allEnabled; 
@property (readonly) char altDSIDNeedsFixing; 
@property (readonly) char alwaysAutoAccept; 
@property (readonly) char alwaysSendPayload; 
@property (readonly) char backlightOn; 
@property (readonly) char bonjourEnabled; 
@property (readonly) char browseAllInterfaces; 
@property (readonly) char bypassLTKeyAbort; 
@property (readonly) char carplayConnected; 
@property (readonly) char coalesceMe; 
@property (readonly) char computerToComputer; 
@property (readonly) char connectedEnabled; 
@property (readonly) char controlCenterVisible;                                    //@synthesize controlCenterVisible=_controlCenterVisible - In the implementation block
@property (readonly) char currentConsoleUser; 
@property (readonly) char deviceKeyBagDisabled; 
@property (readonly) char deviceKeyBagLocked; 
@property (readonly) char deviceKeyBagLocking; 
@property (readonly) char deviceKeyBagUnlocked; 
@property (readonly) char deviceRequiresNewRanging; 
@property (readonly) char deviceSupportsContinuity; 
@property (readonly) char deviceSupportsRanging; 
@property (readonly) char deviceSupportsWAPI; 
@property (readonly) char deviceUIUnlocked; 
@property (readonly) char deviceWasUnlockedOnce; 
@property (readonly) char disableAutoAccept; 
@property (readonly) char disableCompression; 
@property (readonly) char disableContinuityTLS; 
@property (readonly) char disableExtractMediaFromBundles; 
@property (readonly) char disablePeopleSuggestions; 
@property (readonly) char disablePictureQuery; 
@property (readonly) char disablePipelining; 
@property (readonly) char disableQuarantine; 
@property (readonly) char disableRotation; 
@property (readonly) char disableTLS; 
@property (readonly) char dockHasDownloadsFolder; 
@property (readonly) char eduModeEnabled; 
@property (readonly) char enableAirDropAdvertising; 
@property (readonly) char enableAirDropReceiving; 
@property (readonly) char enableAllRecents; 
@property (readonly) char enableBugs; 
@property (readonly) char enableContinuity; 
@property (readonly) char enableDebugMode; 
@property (readonly) char enableDemoMode; 
@property (readonly) char enableDVZip; 
@property (readonly) char enableHotspotFallback; 
@property (readonly) char enablePKZip; 
@property (readonly) char enableStrangers; 
@property (readonly) char enableStreamDebugging; 
@property (readonly) char enableWebloc; 
@property (readonly) char enableXML; 
@property (readonly) char finderAirDropEnabled; 
@property (readonly) char forceAWDL; 
@property (readonly) char forceP2P; 
@property (readonly) char handoffVisible; 
@property (readonly) char ignoreIconDiskCache; 
@property (readonly) char internetSharingEnabled; 
@property (readonly) char multipleUsersLoggedIn;                                   //@synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn - In the implementation block
@property (readonly) char myAppleIDIsManaged; 
@property (readonly) char personalHotspotAllowed; 
@property (readonly) char registerAllInterfaces; 
@property (readonly) char runningAsSetupUser; 
@property (readonly) char screenOn; 
@property (readonly) char showMeInWormhole; 
@property (readonly) char showThisComputer; 
@property (readonly) char signedIntoPrimaryiCloudAccount; 
@property (readonly) char simStateReady; 
@property (readonly) char sleepModeOn; 
@property (readonly) char testDiskFull; 
@property (readonly) char wifiUserPowerPreference; 
@property (readonly) char wirelessAccessPoint; 
@property (readonly) char wirelessCarPlay; 
+(id)sharedMonitor;
+(char)enableNewHashing;
+(double)b332BTAddressRotationDelay;
+(long long)shareSheetMaxSuggestions;
+(char)b332PairingEnabled;
+(char)isBuddyCompleted;
+(char)enableOOBPCredentialLogging;
-(id)init;
-(void)postNotification:(id)arg1 ;
-(void)activate;
-(unsigned char)networkType;
-(NSString *)modelName;
-(id)_myAppleID;
-(NSString *)myAppleID;
-(char)screenOn;
-(void)virtualInterfaceStateChangedForWiFiInterfaceWithName:(id)arg1 ;
-(CNContact *)meCard;
-(void)contactStoreDidChange:(id)arg1 ;
-(void)setAirplaneModeEnabled:(char)arg1 ;
-(long long)mediaAccessControlSetting;
-(char)sleepModeOn;
-(void)airplaneModeChanged;
-(NSString *)computerName;
-(NSData *)bluetoothAddress;
-(void)installDynamicStoreCallBack;
-(NSString *)localHostName;
-(long long)signalStrength;
-(char)airplaneModeEnabled;
-(void)postNotification:(id)arg1 userInfo:(id)arg2 ;
-(char)currentConsoleUser;
-(NSString *)bonjourName;
-(char)isAirDropAllowed;
-(char)disableCompression;
-(id)commonNameForCertificate:(SecCertificateRef)arg1 ;
-(char)deviceSupportsContinuity;
-(NSString *)myAltDSID;
-(long long)familyHotspotStateForAltDSID:(id)arg1 ;
-(char)deviceWasUnlockedOnce;
-(char)alwaysSendPayload;
-(char)disableContinuityTLS;
-(SecIdentityRef)copyMyAppleIDSecIdentity;
-(SecCertificateRef)copyMyAppleIDIntermediateCertificate;
-(NSString *)myAppleIDCommonName;
-(char)enableStreamDebugging;
-(char)deviceKeyBagUnlocked;
-(char)deviceUIUnlocked;
-(NSString *)someComputerName;
-(void)handleAppleAccountSignIn;
-(void)handleAppleAccountSignOut;
-(NSDictionary *)awdlInfo;
-(char)dockHasDownloadsFolder;
-(char)browseAllInterfaces;
-(char)enableAirDropAdvertising;
-(NSData *)myShortHashesForAirDrop;
-(char)enableDemoMode;
-(long long)discoverableLevel;
-(char)wirelessEnabled;
-(char)bluetoothEnabled;
-(char)showMeInWormhole;
-(char)showThisComputer;
-(NSString *)netbiosName;
-(char)enableBugs;
-(char)disablePictureQuery;
-(id)awdlInfoForPeerWithServiceName:(id)arg1 ;
-(id)contactWithPhoneNumberOrEmail:(id)arg1 ;
-(char)contactIsBlocked:(id)arg1 ;
-(char)enableStrangers;
-(id)verifiedIdentityForAppleID:(id)arg1 ;
-(void)cacheIdentity:(id)arg1 ;
-(id)emailOrPhoneForEmailHash:(id)arg1 phoneHash:(id)arg2 ;
-(id)odiskMountPointsForServer:(id)arg1 ;
-(char)wifiUserPowerPreference;
-(long long)deviceKeyBagState;
-(char)signedIntoPrimaryiCloudAccount;
-(char)deviceSupportsRanging;
-(NSString *)modelCode;
-(char)internetSharingEnabled;
-(char)deviceKeyBagDisabled;
-(void)setAirDropPublished:(char)arg1 ;
-(NSString *)discoverableMode;
-(char)registerAllInterfaces;
-(char)disableRotation;
-(char)enableContinuity;
-(char)forceAWDL;
-(char)enableAllRecents;
-(id)serverNameForHost:(id)arg1 ;
-(void)setODiskMountPoints:(id)arg1 ;
-(void)setServerMountPoints:(id)arg1 ;
-(NSDate *)lastDarkWakeDate;
-(void)hsa2EnabledWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)deviceRequiresNewRanging;
-(unsigned)systemUIFlags;
-(char)disableQuarantine;
-(char)enablePKZip;
-(char)disableExtractMediaFromBundles;
-(char)runningAsSetupUser;
-(char)deviceSupportsWAPI;
-(void)setWirelessEnabled:(char)arg1 ;
-(void)setBluetoothEnabled:(char)arg1 ;
-(void)setDiscoverableMode:(NSString *)arg1 ;
-(NSString *)deviceInformation;
-(char)isAirDropAvailable;
-(id)mountPointsForServer:(id)arg1 ;
-(long long)autoHotspotState;
-(char)altDSIDNeedsFixing;
-(void)fixAltDSIDIfNeeded;
-(char)enableHotspotFallback;
-(char)controlCenterVisible;
-(id)contactWithContactIdentifier:(id)arg1 ;
-(int)workgroupThreshold;
-(char)connectedEnabled;
-(char)bonjourEnabled;
-(int)sidebarMaxCount;
-(char)allEnabled;
-(NSString *)workgroup;
-(void)addServerName:(id)arg1 forHostName:(id)arg2 ;
-(void)installSleepStateMonitor;
-(void)installManagedConfigurationMonitor;
-(void)installFinderSidebarPrefsMonitor;
-(void)installWirelessCarPlayMonitor;
-(void)installSMBPreferencesMonitor;
-(void)installCarPlayStatusMonitor;
-(void)installLocaleChangeMonitor;
-(void)installSpringBoardStateMonitor;
-(void)installSystemUIMonitor;
-(void)installDisplaySleepMonitor;
-(void)installDisplayConfigurationMonitor;
-(void)installClamshellStateChangeMonitor;
-(void)installBonjourNameMonitor;
-(void)installContactsMonitor;
-(void)installKeyBagUnlockMonitor;
-(void)installUserPictureMonitor;
-(void)installUILockStatusMonitor;
-(void)installSleepWakeCallBack;
-(void)installBluetoothMonitor;
-(void)installWirelessMonitor;
-(void)installAppleIDAccountInfoMonitor;
-(void)installAppleIDUsernameMonitor;
-(void)installVolumesMonitor;
-(void)installBacklightMonitor;
-(void)installSleepNotification;
-(void)installWiFiPasswordSharingMonitor;
-(void)installSSIDCacheMonitor;
-(void)installWristStateMonitor;
-(void)installMISMonitor;
-(void)installCoreTelephonyMonitor;
-(void)installAirplaneModeMonitor;
-(void)installAirPlayPreferencesMonitor;
-(char)_multipleUsersLoggedIn;
-(void)resetMeCardWithReason:(id)arg1 ;
-(id)createHostNameKey:(id)arg1 ;
-(void)logAirDropTransactionForClientServer:(char)arg1 beginEnd:(char)arg2 count:(int)arg3 ;
-(void)updateDiscoverableMode;
-(char)wirelessCarPlay;
-(char)wirelessAccessPoint;
-(char)enableAirDropReceiving;
-(char)isAirDropReady;
-(id)reconciledDiscoverableMode;
-(long long)appleIDAccountState;
-(char)eduModeEnabled;
-(id)defaultDiscoverableMode;
-(id)newDiscoverableMode;
-(SecCertificateRef)_copyMyAppleIDCertificate;
-(SecCertificateRef)_copyMyAppleIDIntermediateCertificate;
-(SecIdentityRef)_copyMyAppleIDSecIdentity;
-(void)clearMyAppleIDInfo;
-(NSArray *)myAppleIDEmailAddresses;
-(NSArray *)myAppleIDPhoneNumbers;
-(NSArray *)awdlPeerList;
-(id)contactForCombinedHash:(id)arg1 ;
-(void)generateContactHashes;
-(id)contactIdentifierForMediumHashes:(id)arg1 ;
-(char)contactsContainsShortHashes:(id)arg1 ;
-(id)emailsForContact:(id)arg1 ;
-(void)addEmails:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5 ;
-(id)instantMessageEmailsForContact:(id)arg1 ;
-(id)phoneNumbersForContact:(id)arg1 ;
-(void)addPhoneNumbers:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5 ;
-(id)addressOrNumForHash:(id)arg1 ;
-(id)addAdditionalInformationToMeCard:(id)arg1 ;
-(void)updateFamilyHotspotState;
-(char)userPoweredOffWiFiInterface:(id)arg1 ;
-(NSDictionary *)myAppleIDValidationRecord;
-(id)awdlStateInfo;
-(id)emailAddressesForAppleID:(id)arg1 ;
-(id)phoneNumbersForAppleID:(id)arg1 ;
-(id)unifiedAppleIDInfo;
-(char)smbConfiguration:(SCPreferencesRef)arg1 netBiosName:(id*)arg2 workgroup:(id*)arg3 ;
-(char)booleanProperty:(CFStringRef)arg1 forList:(OpaqueLSSharedFileListRefRef)arg2 ;
-(NSString *)consoleUser;
-(SDAirDropServer *)finderServer;
-(id)defaultWiFiDevice;
-(char)wifiInterfaceReady:(id)arg1 ;
-(void)appleIDAccountInfoChanged:(id)arg1 ;
-(void)handleAWDLState:(id)arg1 ;
-(void)logBluetoothPowerState;
-(void)bluetoothPowerChanged:(id)arg1 ;
-(void)bluetoothAddressChanged;
-(void)uninstallBonjourNameMonitor;
-(void)clearHashesToContacts;
-(void)clearMyIconAndHash;
-(void)contactsStoreMeCardChanged:(id)arg1 ;
-(void)clearComputerName;
-(void)clearLocalHostName;
-(void)clearConsoleUser;
-(void)restartBonjourNameMonitor;
-(id)stringForWatchWristState:(long long)arg1 ;
-(void)handleWiFiPasswordSharingChanged;
-(void)clearMonitorCache;
-(void)airDropTransactionBegin:(char)arg1 ;
-(void)airDropTransactionEnd:(char)arg1 ;
-(void)removeServerName:(id)arg1 ;
-(char)verifyAndParseValidationRecordData:(id)arg1 intoDictionary:(out id*)arg2 ;
-(void)cacheCertificate:(SecCertificateRef)arg1 forRealName:(id)arg2 ;
-(SecCertificateRef)copyCertificateForRealName:(id)arg1 ;
-(SecCertificateRef)copyMyAppleIDCertificate;
-(id)awdlDevice;
-(id)awdlNetwork;
-(id)contactForEmailHash:(id)arg1 phoneHash:(id)arg2 ;
-(char)contactIdentifierIsBlocked:(id)arg1 ;
-(void)updateAutoHotspotState;
-(void)cellularDataEnabled:(char*)arg1 airplaneMode:(char*)arg2 ;
-(char)lteConnectionShows4G;
-(char)familyHotspotEnabled;
-(char)personalHotspotAllowed;
-(char)simStateReady;
-(void)addPreventExitForLocaleReason:(id)arg1 ;
-(void)removePreventExitForLocaleReason:(id)arg1 ;
-(unsigned)wifiPasswordSharingAvailability;
-(id)wifiSSIDForSSIDHash:(id)arg1 ;
-(char)airDropPublished;
-(void)setFinderServer:(SDAirDropServer *)arg1 ;
-(int)minPersonImageSize;
-(NSString *)myAccountAppleID;
-(NSString *)myAppleIDEmailHash;
-(NSString *)myAppleIDPhoneHash;
-(NSString *)myEmail;
-(NSString *)myName;
-(NSString *)myGivenName;
-(NSString *)myPrimaryEmail;
-(NSData *)myMediumHashes;
-(char)alwaysAutoAccept;
-(char)backlightOn;
-(char)bypassLTKeyAbort;
-(char)carplayConnected;
-(char)coalesceMe;
-(char)computerToComputer;
-(char)deviceKeyBagLocked;
-(char)deviceKeyBagLocking;
-(char)disableAutoAccept;
-(char)disablePeopleSuggestions;
-(char)disablePipelining;
-(char)disableTLS;
-(char)enableDebugMode;
-(char)enableDVZip;
-(char)enableWebloc;
-(char)enableXML;
-(char)finderAirDropEnabled;
-(char)forceP2P;
-(char)handoffVisible;
-(char)ignoreIconDiskCache;
-(char)myAppleIDIsManaged;
-(char)testDiskFull;
-(void)updateMediaAccessControlSetting:(char)arg1 ;
-(void)updateAWDLStateInfo;
-(void)logBluetoothAvailabilityState:(char)arg1 ;
-(void)uninstallCarPlayStatusMonitor;
-(void)handleDynamicStoreCallback:(SCDynamicStoreRef)arg1 changedKeys:(CFArrayRef)arg2 ;
-(void)handleNameMonitorCallBack:(const char*)arg1 flags:(unsigned)arg2 error:(int)arg3 ;
-(long long)pairedWatchWristState;
-(void)updatePairedWatchWristState:(long long)arg1 ;
-(int)pairedWatchLockState;
-(void)updatePairedWatchLockState:(int)arg1 ;
-(void)handleMISStateChanged:(id)arg1 ;
-(void)updateLocalPowerSource:(id)arg1 ;
-(SFPowerSource *)localPowerSource;
-(void)handleSleepWakeCallBack:(unsigned)arg1 messageArguement:(void*)arg2 ;
-(void)reloadSMBConfInfo;
-(void)updateWatchWristState:(long long)arg1 ;
-(long long)watchWristState;
-(void)clearOperationModeInfo;
-(void)clearWirelessState;
-(void)logWiFiPowerState;
-(NSDictionary *)awdlState;
-(NSSet *)effectiveBlacklistedAppBundleIDs;
-(char)multipleUsersLoggedIn;
@end

