/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 1, 2023 at 11:00:03 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/IDSServiceDelegate.h>

@protocol SDAutoUnlockTransportClient, OS_dispatch_queue;
@class NSDate, NSNumber, IDSService, NSObject, NSMapTable, NSMutableDictionary, NSSet, NSString;

@interface SDAutoUnlockTransport : NSObject <IDSServiceDelegate> {

	NSDate* _lastSeenWatchDate;
	NSNumber* _watchExistedInUnlockList;
	NSNumber* _watchCurrentlyInList;
	id<SDAutoUnlockTransportClient> _primaryClient;
	IDSService* _idsService;
	IDSService* _activityService;
	NSObject*<OS_dispatch_queue> _transportQueue;
	NSObject*<OS_dispatch_queue> _clientQueue;
	NSMapTable* _clientMap;
	NSMutableDictionary* _completionHandlers;
	NSMutableDictionary* _sendIdentifierToSessionID;
	NSMutableDictionary* _sendDates;
	NSDate* _lastSendDate;
	NSMutableDictionary* _autoUnlockDeviceCache;
	NSMutableDictionary* _cloudPairRetryRecords;
	NSMutableDictionary* _cachedBluetoothIDToUniqueIDs;
	NSSet* _cachedApproveBluetoothIDs;

}

@property (nonatomic,retain) IDSService * idsService;                                         //@synthesize idsService=_idsService - In the implementation block
@property (nonatomic,retain) IDSService * activityService;                                    //@synthesize activityService=_activityService - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> transportQueue;                     //@synthesize transportQueue=_transportQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> clientQueue;                        //@synthesize clientQueue=_clientQueue - In the implementation block
@property (nonatomic,retain) NSMapTable * clientMap;                                          //@synthesize clientMap=_clientMap - In the implementation block
@property (retain) NSMutableDictionary * completionHandlers;                                  //@synthesize completionHandlers=_completionHandlers - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * sendIdentifierToSessionID;                 //@synthesize sendIdentifierToSessionID=_sendIdentifierToSessionID - In the implementation block
@property (retain) NSMutableDictionary * sendDates;                                           //@synthesize sendDates=_sendDates - In the implementation block
@property (nonatomic,retain) NSDate * lastSendDate;                                           //@synthesize lastSendDate=_lastSendDate - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * autoUnlockDeviceCache;                     //@synthesize autoUnlockDeviceCache=_autoUnlockDeviceCache - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * cloudPairRetryRecords;                     //@synthesize cloudPairRetryRecords=_cloudPairRetryRecords - In the implementation block
@property (nonatomic,retain) NSNumber * watchCurrentlyInList;                                 //@synthesize watchCurrentlyInList=_watchCurrentlyInList - In the implementation block
@property (nonatomic,retain) NSDate * lastSeenWatchDate;                                      //@synthesize lastSeenWatchDate=_lastSeenWatchDate - In the implementation block
@property (nonatomic,retain) NSNumber * watchExistedInUnlockList;                             //@synthesize watchExistedInUnlockList=_watchExistedInUnlockList - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * cachedBluetoothIDToUniqueIDs;              //@synthesize cachedBluetoothIDToUniqueIDs=_cachedBluetoothIDToUniqueIDs - In the implementation block
@property (nonatomic,retain) NSSet * cachedApproveBluetoothIDs;                               //@synthesize cachedApproveBluetoothIDs=_cachedApproveBluetoothIDs - In the implementation block
@property (nonatomic,readonly) char appleWatchExisted; 
@property (nonatomic,readonly) char watchSeenRecently; 
@property (__weak) id<SDAutoUnlockTransportClient> primaryClient;                             //@synthesize primaryClient=_primaryClient - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedTransport;
-(id)init;
-(id)state;
-(void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 devicesChanged:(id)arg2 ;
-(void)service:(id)arg1 nearbyDevicesChanged:(id)arg2 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(char)arg4 error:(id)arg5 context:(id)arg6 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4 ;
-(NSMutableDictionary *)completionHandlers;
-(void)setCompletionHandlers:(NSMutableDictionary *)arg1 ;
-(id)pairedDeviceID;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(void)setClientQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(char)isDeviceSatellitePaired;
-(id)activeDevice;
-(IDSService *)idsService;
-(void)setIdsService:(IDSService *)arg1 ;
-(NSMapTable *)clientMap;
-(void)setClientMap:(NSMapTable *)arg1 ;
-(NSObject*<OS_dispatch_queue>)transportQueue;
-(void)loadCloudPairRetries;
-(void)updateBluetoothIDCache;
-(NSMutableDictionary *)sendIdentifierToSessionID;
-(void)clearAutoUnlockDeviceCache;
-(id)enabledAutoUnlockDevicesUsingCache:(char)arg1 ;
-(NSMutableDictionary *)autoUnlockDeviceCache;
-(id)onqueue_bluetoothIDForIDSID:(id)arg1 ;
-(id)onqueue_bluetoothDeviceIdentifiers;
-(id)idsDeviceForUniqueID:(id)arg1 ;
-(long long)deviceTypeForDevice:(id)arg1 ;
-(id)autoUnlockDeviceForIDSDevice:(id)arg1 ;
-(id)autoUnlockDeviceForBluetoothID:(id)arg1 cached:(char)arg2 ;
-(id)idsDeviceForBluetoothID:(id)arg1 ;
-(id)autoUnlockDeviceForIDSDevice:(id)arg1 cloudPaired:(char)arg2 cached:(char)arg3 ;
-(id)onqueue_devicesWithLTKs;
-(id)autoUnlockEligibleDevicesWithCloudPairing:(char)arg1 ;
-(id)onqueue_autoUnlockEligibleDevices:(char)arg1 ;
-(char)showOtherDevices;
-(char)watchVersionEligibleForDevice:(id)arg1 ;
-(NSDate *)lastSeenWatchDate;
-(void)setLastSeenWatchDate:(NSDate *)arg1 ;
-(NSNumber *)watchCurrentlyInList;
-(void)setWatchCurrentlyInList:(NSNumber *)arg1 ;
-(NSNumber *)watchExistedInUnlockList;
-(void)setWatchExistedInUnlockList:(NSNumber *)arg1 ;
-(char)activityServiceHasWatch;
-(id)onqueue_enabledAutoUnlockDevicesUsingCache:(char)arg1 ;
-(id)nameForDevice:(id)arg1 ;
-(id)modelNameForDevice:(id)arg1 ;
-(char)disableEncryption;
-(id)proxyBluetoothDeviceIDForDeviceID:(id)arg1 ;
-(NSSet *)cachedApproveBluetoothIDs;
-(void)updateApproveBluetoothIDs;
-(id)enabledAutoUnlockDevices;
-(void)setCachedApproveBluetoothIDs:(NSSet *)arg1 ;
-(char)showIDInName;
-(NSMutableDictionary *)cachedBluetoothIDToUniqueIDs;
-(void)setCachedBluetoothIDToUniqueIDs:(NSMutableDictionary *)arg1 ;
-(IDSService *)activityService;
-(char)canRetryCloudPairingForDeviceID:(id)arg1 useShortDate:(char)arg2 ;
-(void)updateRetryDatesForDeviceIDs:(id)arg1 ;
-(NSMutableDictionary *)cloudPairRetryRecords;
-(void)setCloudPairRetryRecords:(NSMutableDictionary *)arg1 ;
-(void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 errorHandler:(/*^block*/id)arg7 ;
-(void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 completion:(/*^block*/id)arg7 ;
-(id)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 wantsACK:(char)arg6 timeout:(id)arg7 completion:(/*^block*/id)arg8 ;
-(id)transferDataFromPayload:(id)arg1 sessionID:(id)arg2 ;
-(id)dataFromUUID:(id)arg1 ;
-(id<SDAutoUnlockTransportClient>)primaryClient;
-(char)pairingRequestIsValidForDeviceID:(id)arg1 messageContext:(id)arg2 ;
-(char)appleWatchExisted;
-(char)watchSeenRecently;
-(id)placeholderDevice;
-(void)addClient:(id)arg1 forIdentifer:(id)arg2 ;
-(void)removeClientForIdentifier:(id)arg1 ;
-(void)logDevices;
-(void)refreshAutoUnlockDeviceCache;
-(id)bluetoothIDForIDSID:(id)arg1 ;
-(id)bluetoothDeviceIdentifiers;
-(char)deviceNearby;
-(id)idsDevicesIDs;
-(id)idsMacDeviceIDs;
-(id)deviceNameForDeviceID:(id)arg1 ;
-(long long)deviceTypeForDeviceID:(id)arg1 ;
-(id)modelIdentifierForDeviceID:(id)arg1 ;
-(id)autoUnlockDeviceForDeviceID:(id)arg1 ;
-(id)autoUnlockDeviceForBluetoothID:(id)arg1 ;
-(id)devicesWithLTKs;
-(id)autoUnlockEligibleDevices;
-(id)approveBluetoothIDs;
-(char)macVersionEligibleForDeviceID:(id)arg1 ;
-(id)idsDeviceIDsForBluetoothID:(id)arg1 ;
-(id)cachedIDSDeviceIDsForBluetoothID:(id)arg1 ;
-(void)logBluetoothIDCache;
-(char)localDeviceIDSRegistered;
-(id)connectionCacheDevices;
-(void)triggerCloudPairRetryWithShortRetryDeviceIDs:(id)arg1 ;
-(void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 timeout:(id)arg5 errorHandler:(/*^block*/id)arg6 ;
-(void)resetAppleWatchExisted;
-(void)setPrimaryClient:(id<SDAutoUnlockTransportClient>)arg1 ;
-(void)setActivityService:(IDSService *)arg1 ;
-(void)setTransportQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setSendIdentifierToSessionID:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)sendDates;
-(void)setSendDates:(NSMutableDictionary *)arg1 ;
-(NSDate *)lastSendDate;
-(void)setLastSendDate:(NSDate *)arg1 ;
-(void)setAutoUnlockDeviceCache:(NSMutableDictionary *)arg1 ;
@end

